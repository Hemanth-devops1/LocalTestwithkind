name: CI/CD for Local Kubernetes

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # This job runs for both PRs and main branch pushes
  build-and-scan:
    runs-on: ubuntu-latest
    steps:
      - name: 🔁 Checkout code
        uses: actions/checkout@v3

      - name: 📦 Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: 📥 Install dependencies
        run: npm ci

     # - name: 🔍 Lint code
     #  run: npm run lint

      - name: ✅ Run tests
        run: npm test

      - name: 🛡 Install Snyk
        run: npm install -g snyk

      - name: 🛡 Snyk dependency scan
        run: snyk test
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: Run Snyk code test
        run: snyk code test --all-projects || true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  # This job runs only when code is pushed to main
  build-and-push-image:
    runs-on: ubuntu-latest
    needs: build-and-scan
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: 🔁 Checkout code
        uses: actions/checkout@v3

      - name: 🔑 Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: 🐳 Build and push Docker image
        run: |
          IMAGE=${{ secrets.DOCKER_USERNAME }}/k8s-helm-sample:latest
          docker build -t $IMAGE .
          docker push $IMAGE

  # Deploy job runs only on main branch push
  deploy:
    runs-on: self-hosted
    needs: build-and-push-image
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: 🔁 Checkout code
        uses: actions/checkout@v3

      - name: 🚀 Deploy with Helm
        run: |
          helm upgrade --install k8s-helm-sample ./helm \
            --set image.repository=${{ secrets.DOCKER_USERNAME }}/k8s-helm-sample \

            --set image.tag=latest


